{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kouros/Code/SSR/components/Itempage/Comment.jsx\";\nimport React, { Component } from \"react\";\nimport StarRatings from \"react-star-ratings\";\nimport { NotificationManager } from \"react-notifications\";\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n    _this.state = {\n      comments: [],\n      comment: \"\",\n      rate: 0\n    };\n    _this.handleCommentChange = _this.handleCommentChange.bind(_assertThisInitialized(_this));\n    _this.handleAddComment = _this.handleAddComment.bind(_assertThisInitialized(_this));\n    _this.changeRating = _this.changeRating.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"test\");\n\n      var body = _JSON$stringify({\n        companyid: 191\n      });\n\n      var a = this.axios.post(\"http://localhost/Backend/API/getcompanycomment.php\", body).then(function (res) {\n        console.log(\"test\", res);\n        if (res.data.message === \"Successful\") _this2.setState({\n          comments: res.data.comments\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"reviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.comments.map(function (item, index) {\n        return React.createElement(\"div\", {\n          className: \"reviewscard\",\n          key: index.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          key: index.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon-user\",\n          key: \"us\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), this.capitalizeFirstLetter(item.username)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon-calendar\",\n          key: \"dad\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), item.date.slice(0, 10)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon-clock\",\n          key: \"da\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), item.date.slice(10, 20)), React.createElement(StarRatings, {\n          rating: Number(item.rate),\n          starDimension: \"15px\",\n          starSpacing: \"1px\",\n          starRatedColor: \"#ffc120\",\n          numberOfStars: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          key: \"co\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, item.comment));\n      }, this), React.createElement(\"div\", {\n        className: \"reviewscard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0412\\u0430\\u0448 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439 :\")), React.createElement(\"textarea\", {\n        value: this.state.comment,\n        onChange: this.handleCommentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"reviewscard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(StarRatings, {\n        rating: this.state.rate,\n        starDimension: \"15px\",\n        starSpacing: \"1px\",\n        starRatedColor: \"#ffc120\",\n        changeRating: this.changeRating,\n        numberOfStars: 10,\n        name: \"rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleAddComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\")))));\n    }\n  }, {\n    key: \"changeRating\",\n    value: function changeRating(newRate, name) {\n      this.setState({\n        rate: newRate\n      });\n    }\n  }, {\n    key: \"handleCommentChange\",\n    value: function handleCommentChange(event) {\n      this.setState({\n        comment: event.target.value\n      });\n    }\n  }, {\n    key: \"capitalizeFirstLetter\",\n    value: function capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n  }, {\n    key: \"handleAddComment\",\n    value: function handleAddComment() {\n      var _this3 = this;\n\n      var token = localStorage.getItem(\"jwt\"); //should validate\n\n      if (!token) {\n        NotificationManager.info(\"Login to your acount to add comment!\");\n      } else if (this.state.comment.length < 10) {\n        NotificationManager.info(\"Too Short Comment!\");\n      } else if (this.state.rate === 0) {\n        NotificationManager.info(\"Rate the company to add comment\");\n      } else {\n        var profile = this.API.getProfile();\n\n        if (profile.type === \"0\") {\n          var comment = {};\n\n          var _profile = this.API.getProfile();\n\n          comment.companyid = this.props.companyid;\n          comment.username = _profile.username;\n          comment.comment = this.state.comment;\n          comment.rate = this.state.rate;\n          this.API.addComment(comment).then(function (res) {\n            if (res.message === \"comment saved\") {\n              var comments = _toConsumableArray(_this3.state.comments);\n\n              comments.push({\n                companyid: _this3.props.companyid,\n                username: _profile.username,\n                comment: _this3.state.comment,\n                rate: _this3.state.rate,\n                date: new Date().toJSON().slice(0, 19).replace(\"T\", \" \")\n              });\n\n              _this3.setState({\n                comments: comments,\n                rate: 0,\n                comment: \"\"\n              }, function () {\n                NotificationManager.info(\"comment added\");\n              });\n            }\n          });\n        } else {\n          NotificationManager.info(\"Sign in with a client account\");\n        }\n      }\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport default Comment;","map":{"version":3,"sources":["/Users/kouros/Code/SSR/components/Itempage/Comment.jsx"],"names":["React","Component","StarRatings","NotificationManager","Comment","props","state","comments","comment","rate","handleCommentChange","bind","handleAddComment","changeRating","console","log","body","companyid","a","axios","post","then","res","data","message","setState","map","item","index","toString","capitalizeFirstLetter","username","date","slice","Number","newRate","name","event","target","value","string","charAt","toUpperCase","token","localStorage","getItem","info","length","profile","API","getProfile","type","addComment","push","Date","toJSON","replace"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport StarRatings from \"react-star-ratings\";\nimport { NotificationManager } from \"react-notifications\";\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      comment: \"\",\n      rate: 0\n    };\n    this.handleCommentChange = this.handleCommentChange.bind(this);\n    this.handleAddComment = this.handleAddComment.bind(this);\n    this.changeRating = this.changeRating.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"test\");\n    let body = JSON.stringify({\n      companyid: 191\n    });\n    const a = this.axios\n      .post(\"http://localhost/Backend/API/getcompanycomment.php\", body)\n      .then(res => {\n        console.log(\"test\", res);\n\n        if (res.data.message === \"Successful\")\n          this.setState({ comments: res.data.comments });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"reviews\">\n          {this.state.comments.map(function(item, index) {\n            return (\n              <div className=\"reviewscard\" key={index.toString()}>\n                <ul key={index.toString()}>\n                  <li>\n                    <i className=\"icon-user\" key={\"us\"} />\n                    {this.capitalizeFirstLetter(item.username)}\n                  </li>\n                  <li>\n                    <i className=\"icon-calendar\" key={\"dad\"} />\n                    {item.date.slice(0, 10)}\n                  </li>\n                  <li>\n                    <i className=\"icon-clock\" key={\"da\"} />\n                    {item.date.slice(10, 20)}\n                  </li>\n                  <StarRatings\n                    rating={Number(item.rate)}\n                    starDimension=\"15px\"\n                    starSpacing=\"1px\"\n                    starRatedColor=\"#ffc120\"\n                    numberOfStars={10}\n                  />\n                </ul>\n                <p key={\"co\"}>{item.comment}</p>\n              </div>\n            );\n          }, this)}\n\n          <div className=\"reviewscard\">\n            <p>\n              <b>Оставьте Ваш комментарий :</b>\n            </p>\n            <textarea\n              value={this.state.comment}\n              onChange={this.handleCommentChange}\n            />\n            <div className=\"reviewscard\">\n              <StarRatings\n                rating={this.state.rate}\n                starDimension=\"15px\"\n                starSpacing=\"1px\"\n                starRatedColor=\"#ffc120\"\n                changeRating={this.changeRating}\n                numberOfStars={10}\n                name=\"rate\"\n              />\n              <button type=\"button\" onClick={this.handleAddComment}>\n                Отправить\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  changeRating(newRate, name) {\n    this.setState({\n      rate: newRate\n    });\n  }\n\n  handleCommentChange(event) {\n    this.setState({ comment: event.target.value });\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  handleAddComment() {\n    let token = localStorage.getItem(\"jwt\");\n    //should validate\n    if (!token) {\n      NotificationManager.info(\"Login to your acount to add comment!\");\n    } else if (this.state.comment.length < 10) {\n      NotificationManager.info(\"Too Short Comment!\");\n    } else if (this.state.rate === 0) {\n      NotificationManager.info(\"Rate the company to add comment\");\n    } else {\n      let profile = this.API.getProfile();\n      if (profile.type === \"0\") {\n        let comment = {};\n        let profile = this.API.getProfile();\n        comment.companyid = this.props.companyid;\n        comment.username = profile.username;\n        comment.comment = this.state.comment;\n        comment.rate = this.state.rate;\n        this.API.addComment(comment).then(res => {\n          if (res.message === \"comment saved\") {\n            let comments = [...this.state.comments];\n            comments.push({\n              companyid: this.props.companyid,\n              username: profile.username,\n              comment: this.state.comment,\n              rate: this.state.rate,\n              date: new Date()\n                .toJSON()\n                .slice(0, 19)\n                .replace(\"T\", \" \")\n            });\n            this.setState({ comments, rate: 0, comment: \"\" }, () => {\n              NotificationManager.info(\"comment added\");\n            });\n          }\n        });\n      } else {\n        NotificationManager.info(\"Sign in with a client account\");\n      }\n    }\n  }\n}\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}